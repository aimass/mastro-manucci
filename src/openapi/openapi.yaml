openapi: 3.0.3
info:
  title: Moonshot Ledger API
  version: 1.0.0
  description: Moonshot Ledger API OpenAPI3 Spec
servers:
  - url: 'http://localhost:3120'
    description: Local development. Please use URL provided by our Sysadmins.
tags:
  - name: Ledger Resources
    description: Resource endpoints for Ledger Transactions
  - name: Admin Resources
    description: Resource endpoints for System Administration
paths:
  #############################################################
  #           L E D G E R   R E S O U R C E S
  #############################################################
  /subacct:
    post:
      tags:
        - Ledger Resources
      description: Creates a new Subaccount
      operationId: postBook
      x-mojo-to: Main#postSubacct
      requestBody:
        description: Book Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '201':
          description: New Book Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        default:
          description: New Book Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transaction:
    post:
      tags:
        - Ledger Resources
      description: Creates a new transaction document/workflow
      operationId: postTransaction
      x-mojo-to: Main#postTransaction
      requestBody:
        description: Transaction Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTransaction'
      responses:
        '201':
          description: document response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        default:
          description: post document error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order/{id}/invoice:
    post:
      tags:
        - Ledger Resources
      description: Transforms Order to Invoice. This action will create GL entries.
      operationId: postInvoice
      x-mojo-to: Main#postInvoice
      parameters:
        - name: id
          in: path
          description: Order UUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '201':
          description: document response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        default:
          description: post document error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  #############################################################
  #           A D M I N    R E S O U R C E S
  #############################################################
  /coa:
    post:
      tags:
        - Admin Resources
      description: Creates a new Account in COA
      operationId: postCOA
      x-mojo-to: Main#postCOA
      requestBody:
        description: COA Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccount'
      responses:
        '201':
          description: New COA Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: New COA Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /coa/{account}:
    parameters:
      - in: path
        name: account
        required: true
        schema:
          type: string
    get:
      description: Obtain Account Detail from COA
      operationId: getCOA
      x-mojo-to: Main#getCOA
      responses:
        200:
          description: Get account OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Account not found in COA
        '401':
          description: Unauthorized
    delete:
      description: Delete Account from COA
      operationId: deleteCOA
      x-mojo-to: Main#deleteCOA
      tags:
          - Admin Resources
      responses:
        '204':
          description: Deleted
        '400':
          description: Delete Account Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Account not found in COA
        '401':
          description: Unauthorized
#############################################################
#       C O M P O N E N T S    A N D     S C H E M A S
#############################################################
components:
  schemas:
    ### Account
    NewAccount:
      type: object
      required:
        - account
        - description
        - type
        - heading
      properties:
        account:
          type: string
          description: Account number
        description:
          type: string
          description: Account Description
        type:
          type: string
          enum:
            - ASSET
            - LIABILITY
            - EQUITY
            - INCOME
            - EXPENSE
          description: Account Type
        heading:
          type: boolean
          description: Is this account a header
    Account:
      allOf:
        - $ref: '#/components/schemas/NewAccount'
        - type: object
      required:
        - drcr
      properties:
        drcr:
          type: string
          description: DrCr Type
          enum: [DR, CR]
    ### ENTITIES AND SUBACCOUNTS
    NewEntity:
      type: object
      required:
        - name
        - reference
        - type
      properties:
        name:
          type: string
          description: Name of the person, organization or thing.
        reference:
          type: string
          description: An alphanumeric ID that uniquely identifies the entity and will be used to search by.
        type:
          type: string
          description: Type of entity.
          enum:
            - PERSON
            - ORGANIZATION
            - OTHER
        subtype:
          type: string
          description: Entity subtype. This is implementation dependent but normal values include CUSTOMER, VENDOR and
            PARTNER. Customize the enum below if different ones are supported in your impoementation.
          enum:
            - CUSTOMER
            - VENDOR
            - PARTNER
        link:
          type: string
          description: Arbitrary data in JSONB to either link the entity to external systems, or to associate structured
            detailed information about the entity.
        notes:
          type: string
          description: Any additional notes about the entity. Can also be used to hold data for system customization.

    NewSubacct:
      type: object
      required:
        - account
        - parent
        - entityId
      properties:
        account:
          type: string
          description: Alphanumeric account number.
        parent:
          type: string
          description: Alphanumeric account number of the parent in the Chart of Accounts
        type:
          description: Subaccount type. Used mostly for reports and filtering.  This is implementation dependent but
            normal values include STANDARD, TRANSIT, FBO, etc. Customize the enum below if different ones are supported in
            your impoementation.
          enum:
            - STANDARD
            - TRANSIT
            - FBO
            - JOINT
            - BUDGET
            - CC
        entityId:
          type: string
          description: The UUID of the entity who owns this subaccount.
        notes:
          type: string
          description: Any additional notes about the subaccount. Can also be used to hold data for system customization.
    Subacct:
      allOf:
        - $ref: '#/components/schemas/NewSubacct'
        - type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Subaccount Unique identifier
    ### TRANSACTION
    NewTransaction:
      type: object
      required:
        - type
      properties:

        reference:
          type: string
          description: Transaction Type
          enum:
            - AR
            - AP
            - GL
        description:
          type: string
          description: Optional Description
        state:
          type: string
          description: Must exist in the DB.
            Default states are DRAFT,APPROVED,IN_PROGRESS,COMPLETE,CLOSED,CANCELED.
            If left blank will default to DRAFT
        postDate:
          type: string
          format: date
          description: Date in  RFC 3339 format YYYY-DD-MM The date the transaction was actually posted
            accounting-wise. May differ from the date the Transaction was actually posted to
            the API. Defaults to the server's current date and time.
        subacctId:
          type: string
          description: UUID of the Account Book
        subType:
          type: string
          description: All documents are either a Note, Invoice or Journal Entry
          enum: [ORDER, INVOICE, ENTRY]
        link:
          type: string
          description: Optional JSON Data to Link to other systems
        dataIn:
          type: string
          description: Optional JSON Data to log any input data for audit or reporting.

        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/NewLineItem'
          description: List of amounts to balance the double entry of this
            transaction. In simple transactions this will usually be a single
            line item. Double Entry Accounting rules will be checked, for example if the
            transaction is type AP the line item accounts must all be expense.
        parentId:
          type: integer
          description: Optional parent document. For example, an incoming transfer to a customer
            account would have a parent AP document to the customer an a child AR document
            to the bank sending the money.
    Transaction:
      allOf:
        - $ref: '#/components/schemas/NewTransaction'
        - type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: Transaction Unique identifier
        type:
          type: string
          description: All documents are either Accounts Payable or Accounts Receivable
          enum: [AR, AP]
        account:
          type: string
          description: Account of This transaction (same as subacct's)
        amount:
          type: number
          minimum: 0
          exclusiveMinimum: true

    # Ideally this schema should support either a subacctId OR an account.
    # Until OpenAPI supports this, this schema will force a subacctId
    # Note that OpenAPI 3.1 does not yet support mutually exclusive
    # properties, so at present there is no better way to descibe this API.
    # See https://github.com/OAI/OpenAPI-Specification/issues/256

    NewLineItem:
      type: object
      required:
        - subacctId
        - amount
      properties:
        reference:
          type: string
          description: A reference for this line item (sku, check number, note, etc.)
        description:
          type: string
          description: Any additional comments about the line item (item description,
            note purpose, etc.)
        subacctId:
          type: string
          description: Book UUID for this item
        amount:
          type: number
          minimum: 0
          exclusiveMinimum: true

    LineItem:
      allOf:
        - $ref: '#/components/schemas/NewLineItem'
        - type: object
      type: object
      required:
        - account
      properties:
        account:
          type: string
          description: Account Number

    ### ERRORS STRUCTURE
    Error:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
    ErrorItem:
      type: object
      properties:
        message:
          type: string
        path:
          type: string
