#!/usr/bin/env bash

source task-utils/getcontainerid
source task-utils/tasks

TASK=''
if [[ -z $1 ]]
then
  echo "These are the tasks I can help you with:"
  echo "local - destroys Docker artifacts, and redeploys a fresh DB Container"
  echo "up - build and run Ledger in Docker Container"
  echo "run - runs Ledger locally (requires local Perl and deps)"
  echo "down - Stop and remove containers, networks and volumes"
  echo "resetdb - resets the database in Docker DB Container"
  echo "test - run single test/subtest or all tests"
  echo "testdb - runs DB pgTAP tests"
  echo "clean - cleans mostly code"
  echo "moreclean - cleans Ledger Docker Images and Volumes"
  echo "realclean - cleans everything and Docker deeply"
  echo "apishell - open a shell inside the API container (if running)"
  echo "envadmin - sets your shell env to DB admin"
  echo "envrun - sets your shell env to DB runtime"
  echo "dbupdate - runs DB deltas"
  echo "dbdestroy - runs the DB destroy scripts only"
  echo "testpreshing - tests the complete preshing set"
  echo -n "Please specify a task to perform: "
  read -r TASK
else
  TASK=$1
fi


if    [[ $TASK = "local" ]]
  then dolocal
elif  [[ $TASK = "up" ]]
  then doup
elif  [[ $TASK = "run" ]]
  then dorun
elif  [[ $TASK = "down" ]]
  then dodown
elif  [[ $TASK = "resetdb" ]]
  then doresetdb
elif  [[ $TASK = "test" ]]
  then dotest $2 $3
elif  [[ $TASK = "testdb" ]]
  then dotestdb
elif  [[ $TASK = "clean" ]]
  then doclean
elif  [[ $TASK = "moreclean" ]]
  then domoreclean
elif  [[ $TASK = "realclean" ]]
  then dorealclean
elif  [[ $TASK = "apishell" ]]
  then doapishell
elif  [[ $TASK = "envadmin" ]]
  then subshellwithenv 'local_env_admin'
elif  [[ $TASK = "envrun" ]]
  then subshellwithenv 'local_env_run'
elif  [[ $TASK = "dbupdate" ]]
  then dodbupdate
elif  [[ $TASK = "dbdestroy" ]]
  then dodbdestroy
elif  [[ $TASK = "testpreshing" ]]
  then dotestpreshing

else
  dodefault $TASK
fi

